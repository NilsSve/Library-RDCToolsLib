Use cRDCApplication.pkg
Use cCJGridPromptList.pkg

Class cRDCCJGridPromptList is a cCJGridPromptList
    
    Procedure Construct_Object
        Forward Send Construct_Object

        // General settings
        Set pbRestoreLayout to True
        Set psLayoutSection to ((Object_Label(Parent(Self))) + "-" + (Object_Label(Self)))
        Set psNoItemsText to "No data found..."
        Set pbHeaderReorders to True
        Set pbHeaderTogglesDirection to True
        Set pbReadOnly to True
        Set pbEditOnTyping to False
        Set pbFocusSubItems to False
        Set pbSelectionEnable to True
        Set pbMultipleSelection to True
        Set pbShowRowFocus to True
        Set pbHotTracking to True
        Set pbInitialSelectionEnable to False
        Set pbShowFooter to False
        Set pbGrayIfDisable to True
        Set pbShadeSortColumn to True
        Set pbSelectTextOnEdit to False
        Set pbHeaderSelectsColumn to False
        Set pbRestoreLayout to True
        Set pbAutoOrdering to False
        Set pbAutoSearch to False
        Set pbAutoSeed to False
        Set pbUseFocusCellRectangle to True
        Set piTooltipMaxWidth to 400
        Set peAnchors to anAll

        #IF (!@ > 180)
            #IF (!@ < 230)
                Set peVisualTheme to xtpReportThemeExplorer
            #ELSE
                Set peVisualTheme to xtpGridThemeVisualStudio2022 //xtpGridThemeExplorer
            #ENDIF
        #ENDIF

        Set peBorderStyle to xtpBorderThemedFrame
        //Set peHorizontalGridStyle to xtpGridSolid // SmallDots // Solid
        // Colors
        Set pbUseAlternateRowBackgroundColor to True  
        Set piAlternateRowBackgroundColor    to clAlternateRowBgColor   
        Set piSelectedRowBackColor           to clActiveRow
        Set piSelectedRowForeColor           to clWhite
        Set piHighlightBackColor             to clActiveRow  
        Set piCaptionBackColor               to clProgramIconBg
        Set piCaptionForeColor               to clWhite   

        On_Key Key_End                Send MoveToLastEnterableColumn
        On_Key Key_Home               Send MoveToFirstEnterableColumn
        On_Key kCancel                Send Close_Panel // CancelIfPopupObject
    End_Procedure

    Procedure End_Construct_Object
        Forward Send End_Construct_Object

    End_Procedure

    Procedure CancelIfPopupObject
        Boolean bIsInPopupObject
        Delegate Get Popup_State to bIsInPopupObject
        If (bIsInPopupObject = True) Begin
            Send Close_Panel
        End
    End_Procedure

    Procedure OnCreateGridControl
        Forward Send OnCreateGridControl
        Send DoChangeTooltipStyle
    End_Procedure    
    
    // The grid must have been paged first in order to change the font size.
    Procedure Activating
        Send DoChangeFontSize      
    End_Procedure    

    Procedure DoChangeFontSize
        Handle hoFont hoPaintManager
        Variant vFont
        String sFont sFontSize
        Boolean bCreated
        Integer iVal

        Get IsComObjectCreated to bCreated  // When program is started, grid object isn't created yet.
        If (bCreated = False) Begin
            Procedure_Return
        End

        Get phoReportPaintManager to hoPaintManager
        
        Get Create (RefClass(cComStdFont)) to hoFont  // Create a font object
        Get ComTextFont of hoPaintManager to vFont    // Bind the font object to the Grid's text font
        Set pvComObject of hoFont to vFont            // Connect DataFlex object with com object

        Get ReadInteger of ghoApplication CS_Settings CS_GridFontSize 8 to iVal
        Set ComSize of hoFont to iVal
        Send ComRedraw
        Send Destroy to hoFont                        // Destroy the font object (releases memory)
    End_Procedure

    { MethodType=Method }
    Procedure DoChangeTooltipStyle
        Handle  hoTooltip
        Integer iIcon iStyle iWidth
        Boolean bBaloon

        Get phoToolTipContext to hoTooltip

        // This is the programs global tooltip control defined at desktop level.
        If (ghoToolTipController > 0) Begin
            Get piIcon of ghoToolTipController to iIcon
            // The global tooltip controller allows the icons to be
            // from 0-5, but the tooltip context class only allows
            // the tooltip icon to be between 0-3.
            If (iIcon > 3) Begin
                Move xtpToolTipIconInfo to iIcon
            End
            Get piMaxWidth of ghoToolTipController to iWidth
            Get pbBalloonStyle of ghoToolTipController to bBaloon
            If (bBaloon = True) Begin
                Move xtpToolTipBalloon to iStyle
            End
            Else Begin
                Move xtpToolTipOffice2007 to iStyle
            End
        End
        Else Begin
            Move xtpToolTipIconInfo   to iIcon
            Move xtpToolTipOffice2007 to iStyle
            Move 400                  to iWidth
        End

        Set ComStyle of hoTooltip to iStyle
        Set ComMaxTipWidth of hoTooltip to iWidth
    End_Procedure    
    
    Procedure ScaleFont Integer iDirection    // from control + mouse wheel in container object
        Integer iSize jSize kSize iSup iInf iDef
        Handle hoPaintManager hoFont
        Variant vFont
        Boolean bLimit
        
        Move 3 to iInf      //max size
        Move 18 to iSup     //min size
        Move 8 to iDef      //default
        Get phoReportPaintManager to hoPaintManager
        If (IsComObjectCreated (hoPaintManager) = False) Begin
            Procedure_Return
        End
        Get Create (RefClass(cComStdFont)) to hoFont
        Get ComTextFont of hoPaintManager to vFont
        Set pvComObject of hoFont to vFont
        If (iDirection = 0) Begin
            Set ComSize of hoFont to iDef
        End
        Else Begin
           Get ComSize of hoFont to iSize
           Move iSize to jSize
           Repeat
                Move (If(iDirection > 0, jSize + 1, jSize - 1)) to jSize
                Move (If(iDirection > 0, If(jSize > iSup, True, False), If(jSize < iInf, True, False))) to bLimit
                If (not(bLimit)) Begin       
                   Set ComSize of hoFont to jSize
                   Get ComSize of hoFont to kSize
                End
            Until (iSize <> kSize or bLimit)
        End
        Send Destroy to hoFont 
        Send ComRedraw  
        Send WriteInteger of ghoApplication CS_Settings CS_GridFontSize iSize
    End_Procedure 

End_Class
