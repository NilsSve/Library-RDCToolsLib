//****************************************************************************
// $Module type: Class
// $Module name: cRDCModalPanel
// $Author     : Nils Svedmyr, RDC Tools International
// Created     : 2014-03-17 @ 12:33
//
// Description :
//
// $Rev History:
//    2014-03-17  Module header created
// The code is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
// without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
// This is free software; you can redistribute it and/or modify it under the terms of the
// GNU Lesser General Public License - see the "GNU Lesser General Public License.txt"
// in the help folder for more details.
//
//****************************************************************************
Use Windows.pkg
Use cCJCommandBarSystem.pkg
Use cCJSkinFramework.pkg

Register_Procedure ScaleFont Integer iClicks

{ DDOHost=False }
{ DataAware=False }
{ DesignerClass=cDTModalPanel }
{ OverrideProperty=Column_Offset DesignTime=True }
{ OverrideProperty=Row_Offset DesignTime=True }
{ OverrideProperty=StatusBar_Id DesignTime=True }
{ OverrideProperty=ToolBar_Id DesignTime=True }
{ ComponentType=SLClass }
{ HelpTopic=ModalPanel }
Class cRDCModalPanel is a ModalPanel

    Procedure Construct_Object
        Forward Send Construct_Object

        Set Locate_Mode to Center_On_Parent
        Set Border_Style to Border_Thick
        Set Maximize_Icon to True
        Set Minimize_Icon to False

        Property String Private_Icon
        Property Handle phoDialogCommandbar

        On_Key kCancel Send Close_Panel
    End_Procedure

    Procedure Set Icon String sIcon
        Forward Set Icon to sIcon
        Set Private_Icon to sIcon
    End_Procedure

    Function Icon Returns String
        String sIcon
        Get Private_Icon to sIcon
        Function_Return sIcon
    End_Function

    // Due to a bug in DF we need to set the
    // panel icon here.
    Procedure Page Integer iPageObject
        String sIcon
        Integer hWnd

        Forward Send Page iPageObject
        Get Private_Icon to sIcon
        If (sIcon <> "") Begin
            Set Icon to sIcon
        End

        Get Window_Handle to hWnd

        If ((ghoSkinFramework <> 0) and (hWnd <> 0)) Begin
            Send ComRemoveWindow to ghoSkinFramework hWnd
            Send ComApplyWindow  to ghoSkinFramework hWnd
        End
    End_Procedure

    // Put a status bar at the bottom of the panel, which makes
    // status_help work and puts a gripper in the lower right corner.
    Procedure End_Construct_Object
        Integer iStyle iSize iOffset

        Forward Send End_Construct_Object

        Get Border_Style to iStyle
        Move 8 to iOffset
        If (iStyle = Border_Thick) Begin
            Object oDialogCommandbar is a cCJCommandBarSystem
                Object oStatusBar is a cCJStatusBar
                    Set phoDialogCommandbar to Self
                    Object oStatusIdle is a cCJStatusBarPane
                        Set piId to sbpIDIdlePane
                        Set pbStyleStretch to True
                    End_Object
                End_Object
            End_Object
            Get Size to iSize
            Set Size to (Hi(iSize) + iOffset) (Low(iSize))
            Set piMinSize to (Hi(iSize) + iOffset) (Low(iSize))
        End
    End_Procedure
    // ToDo:*** CONTINUE WITH View and dbView classes! ***
    Procedure Set StatusText String sText
        Set psText of (oStatusIdle(phoDialogCommandbar(Self))) to sText
    End_Procedure                          

    Procedure Popup
        Set Statusbar_Id to (phoDialogCommandbar(Self))
        Forward Send Popup
    End_Procedure

    // To enable Ctrl+MouseWheel in the grid to change font size.
    Procedure OnWmMouseWheel Integer wParam Integer lParam
       Integer iKeys iClicks iX iY iCONTROL
       Short iDelta     // Short signed integer
       Boolean bok 
       
       Move 0 to iDelta
       Move (Low(wParam)) to iKeys           // any keys down when pressed
       Move (MemCopy(AddressOf(iDelta),AddressOf(wParam)+2,2)) to bok
       // C_WHEELDATA is 120 as defined by MS as the delta to react to. Once click is usually 120
       Move (iDelta/C_WHEELDELTA) to iClicks // Number of clicks to react to
       Move (Low(lParam)) to iX  // cursor position
       Move (Hi(lParam)) to iY   

       Move (iKeys iand MK_CONTROL ) to iCONTROL  //$008
       If (iCONTROL) Begin
            Send ScaleFont of ghoApplication iClicks
       End

       // Tell windows that we've handled the event.    
       Set Windows_Override_State to True    
    End_Procedure

End_Class
